/* Auto-generated by genmsg_cpp for file /home/robotics/ros_workspace/hmc-robot-drivers/ardrone2_mudd/srv/Config.srv */
#ifndef ARDRONE2_MUDD_SERVICE_CONFIG_H
#define ARDRONE2_MUDD_SERVICE_CONFIG_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace ardrone2_mudd
{
template <class ContainerAllocator>
struct ConfigRequest_ {
  typedef ConfigRequest_<ContainerAllocator> Type;

  ConfigRequest_()
  : command()
  {
  }

  ConfigRequest_(const ContainerAllocator& _alloc)
  : command(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _command_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  command;


private:
  static const char* __s_getDataType_() { return "ardrone2_mudd/ConfigRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "cba5e21e920a3a2b7b375cb65b64cdea"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "2fb3aa2736d70ecbfc297d3d9b879661"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string command\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, command);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, command);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(command);
    return size;
  }

  typedef boost::shared_ptr< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ConfigRequest
typedef  ::ardrone2_mudd::ConfigRequest_<std::allocator<void> > ConfigRequest;

typedef boost::shared_ptr< ::ardrone2_mudd::ConfigRequest> ConfigRequestPtr;
typedef boost::shared_ptr< ::ardrone2_mudd::ConfigRequest const> ConfigRequestConstPtr;


template <class ContainerAllocator>
struct ConfigResponse_ {
  typedef ConfigResponse_<ContainerAllocator> Type;

  ConfigResponse_()
  : result(false)
  {
  }

  ConfigResponse_(const ContainerAllocator& _alloc)
  : result(false)
  {
  }

  typedef uint8_t _result_type;
  uint8_t result;


private:
  static const char* __s_getDataType_() { return "ardrone2_mudd/ConfigResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "eb13ac1f1354ccecb7941ee8fa2192e8"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "2fb3aa2736d70ecbfc297d3d9b879661"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool result\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, result);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, result);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(result);
    return size;
  }

  typedef boost::shared_ptr< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ConfigResponse
typedef  ::ardrone2_mudd::ConfigResponse_<std::allocator<void> > ConfigResponse;

typedef boost::shared_ptr< ::ardrone2_mudd::ConfigResponse> ConfigResponsePtr;
typedef boost::shared_ptr< ::ardrone2_mudd::ConfigResponse const> ConfigResponseConstPtr;

struct Config
{

typedef ConfigRequest Request;
typedef ConfigResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Config
} // namespace ardrone2_mudd

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cba5e21e920a3a2b7b375cb65b64cdea";
  }

  static const char* value(const  ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xcba5e21e920a3a2bULL;
  static const uint64_t static_value2 = 0x7b375cb65b64cdeaULL;
};

template<class ContainerAllocator>
struct DataType< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ardrone2_mudd/ConfigRequest";
  }

  static const char* value(const  ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string command\n\
\n\
";
  }

  static const char* value(const  ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eb13ac1f1354ccecb7941ee8fa2192e8";
  }

  static const char* value(const  ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xeb13ac1f1354ccecULL;
  static const uint64_t static_value2 = 0xb7941ee8fa2192e8ULL;
};

template<class ContainerAllocator>
struct DataType< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ardrone2_mudd/ConfigResponse";
  }

  static const char* value(const  ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool result\n\
\n\
\n\
";
  }

  static const char* value(const  ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ardrone2_mudd::ConfigRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.command);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ConfigRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ardrone2_mudd::ConfigResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ConfigResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<ardrone2_mudd::Config> {
  static const char* value() 
  {
    return "2fb3aa2736d70ecbfc297d3d9b879661";
  }

  static const char* value(const ardrone2_mudd::Config&) { return value(); } 
};

template<>
struct DataType<ardrone2_mudd::Config> {
  static const char* value() 
  {
    return "ardrone2_mudd/Config";
  }

  static const char* value(const ardrone2_mudd::Config&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ardrone2_mudd::ConfigRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2fb3aa2736d70ecbfc297d3d9b879661";
  }

  static const char* value(const ardrone2_mudd::ConfigRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ardrone2_mudd::ConfigRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ardrone2_mudd/Config";
  }

  static const char* value(const ardrone2_mudd::ConfigRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ardrone2_mudd::ConfigResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2fb3aa2736d70ecbfc297d3d9b879661";
  }

  static const char* value(const ardrone2_mudd::ConfigResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ardrone2_mudd::ConfigResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ardrone2_mudd/Config";
  }

  static const char* value(const ardrone2_mudd::ConfigResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ARDRONE2_MUDD_SERVICE_CONFIG_H

